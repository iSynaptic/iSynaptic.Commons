- Refactor SimpleScanner to a class that inherits from abstract TextScanner<T>, where T is the Token type
	* Use character map tool to identify common character tokens
- Create generic Visitor implementation (similar to one used in RegularExpressionPipeline)...
- Merge iSynaptic.SolutionBuild into Commons solution
- Port iSynaptic.SolutionBuild to use psake...
- Add RelativePath extension methods to FileSystemInfo and IEnumerable<FileSystemInfo>...
- Add overridable OnEnlistment() method to UnitOfWork<U, T> class...
- Break Clonable<T> tests into seperate classes or partial classes...
- Enhance Cloneable<T> to detect if a struct is a cloneable primative (all fields recursively are cloneable primatives)...
- Add more tests around Cloneable<T>...
- Evaluate possible refactoring of Cloneable<T> to see if it could be "simplified"...
- Investigate how Monads could be encorporated in "PipelineEnumerable" concept
    * Perhaps change so that it is strictly functional composition (i.e. not require interface)
- Implement SmartFormat...